name: Test MSVC-Wine build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - "UE4SS/src/**"
      - "UE4SS/include/**"
      - "UE4SS/generated_src/**"
      - "UE4SS/generated_include/**"
      - "deps/**"
      - "UE4SS/proxy_generator/**"
      - "assets/Mods/**"
      - "assets/**.ini"

permissions:
  contents: read

concurrency:
  group: test-wine-build
  cancel-in-progress: true

jobs:
  make-release:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # needed to get commits since last tag
          token: ${{ secrets.UEPSEUDO_PAT }}

      - name: Install MSVC rust target
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc

      - name: Prepare MSVC dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wine64 python3 msitools ca-certificates winbind samba git
          sudo apt-get install -y ninja-build

          echo "MSVC_DIR=$(realpath ~/msvc)" >> $GITHUB_ENV
          git clone https://github.com/mstorsjo/msvc-wine.git

          cd ./msvc-wine
          echo "MSVC_SHA=$(git rev-parse --verify HEAD)" >> $GITHUB_ENV
          cd ..

      - name: Restore MSVC cache
        id: msvc-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.MSVC_DIR }}
          key: ${{ runner.os }}-msvc-${{ env.MSVC_SHA }}
      - name: Install MSVC
        if: steps.cache-msvc.outputs.cache-hit != 'true'
        run: |
          ./msvc-wine/vsdownload.py --accept-license --dest $MSVC_DIR
          ./msvc-wine/install.sh $MSVC_DIR
      - name: Save MSVC install
        id: msvc-cache-save
        uses: actions/cache/save@v4
        with:
          path: ${{ env.MSVC_DIR }}
          key: ${{ steps.msvc-cache-restore.outputs.cache-primary-key }}
      - name: Add MSVC to PATH
        run: |
          echo "$MSVC_DIR/bin/x64" >> $GITHUB_PATH
          echo MSVC path: ${{ env.MSVC_DIR }}
          echo MSVC version: $(grep MSVCVER= "${{ env.MSVC_DIR }}/bin/x64/msvcenv.sh")
          echo Windows SDK version: $(grep SDKVER= "${{ env.MSVC_DIR }}/bin/x64/msvcenv.sh")

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: '2.9.8'

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            .xmake
            Binaries
            Intermediates
            C:/Users/runneradmin/AppData/Local/.xmake
          key: ${{ runner.os }}-xmake-${{ hashFiles('**/xmake.lua') }}

      - name: Build
        run: |
          xmake f -m "Game__Shipping__Win64" -p "windows" -a "x64" --versionCheck=n --ue4ssCross=msvc-wine --sdk="${{ env.MSVC_DIR }}" -v -y
          xmake build

